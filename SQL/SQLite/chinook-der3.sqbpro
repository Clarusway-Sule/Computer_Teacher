<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/sagla/OneDrive/Masaüstü/Computer Teacher/SQL/SQLite/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="browser structure pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="3862"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,9:maincustomers"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="albums" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="63"/><column index="2" value="300"/><column index="3" value="61"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="85"/><column index="2" value="73"/><column index="3" value="83"/><column index="4" value="294"/><column index="5" value="264"/><column index="6" value="132"/><column index="7" value="46"/><column index="8" value="96"/><column index="9" value="82"/><column index="10" value="128"/><column index="11" value="122"/><column index="12" value="183"/><column index="13" value="100"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="invoices" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="85"/><column index="3" value="129"/><column index="4" value="264"/><column index="5" value="132"/><column index="6" value="82"/><column index="7" value="98"/><column index="8" value="118"/><column index="9" value="42"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="tracks" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="0"/></sort><column_widths><column index="1" value="58"/><column index="2" value="300"/><column index="3" value="63"/><column index="4" value="92"/><column index="5" value="61"/><column index="6" value="300"/><column index="7" value="86"/><column index="8" value="63"/><column index="9" value="67"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT * FROM invoices WHERE InvoiceDate BETWEEN &quot;2009-01-01&quot; AND &quot;2011-01-01&quot; ORDER BY InvoiceDate DESC LIMIT 1;
SELECT * FROM invoices WHERE InvoiceDate&gt;&quot;2009-01-01&quot; AND InvoiceDate&lt;&quot;2011-01-01&quot; ORDER BY InvoiceDate DESC LIMIT 1;

SELECT FirstName, LastName, Country FROM customers WHERE Country IN(&quot;Belgium&quot;, &quot;Norway&quot;, &quot;Canada&quot;, &quot;USA&quot;);

SELECT * FROM tracks WHERE Composer like &quot;%Bach&quot;;
SELECT name, Composer FROM tracks WHERE Composer like &quot;%Bach&quot;;

SELECT count(*) FROM invoices;
SELECT count(total) FROM invoices;
SELECT count(BillingState) FROM invoices;
SELECT count(*) as null_olanlar FROM invoices WHERE BillingState IS NULL;

SELECT count(DISTINCT Composer) FROM tracks;
SELECT count(Composer) FROM tracks;
SELECT count(*) FROM tracks WHERE Composer IS NULL;

SELECT name, min(Milliseconds) FROM tracks;
SELECT name, Milliseconds FROM tracks ORDER BY Milliseconds ASC LIMIT 1; 
SELECT name, max(Milliseconds) FROM tracks;

SELECT name, Milliseconds FROM tracks ORDER BY Milliseconds DESC LIMIT 1;
SELECT sum(total) as toplam_kazanılan_para FROM invoices;

SELECT Composer, Count(*) FROM tracks GROUP BY Composer;

SELECT BillingCountry, count(*) FROM invoices GROUP BY BillingCountry;
SELECT BillingCountry, count(DISTINCT CustomerId) FROM invoices GROUP BY BillingCountry;

SELECT Country, count(*) FROM customers GROUP BY Country;

SELECT AlbumId, Min(Milliseconds) FROM tracks GROUP BY AlbumId;

SELECT BillingCountry, sum(total) FROM invoices GROUP BY BillingCountry; 


SELECT tracks.TrackId, tracks.name, albums.Title FROM tracks INNER JOIN albums on tracks.AlbumId=albums.AlbumId;

SELECT tracks.Name, genres.Name FROM tracks INNER JOIN genres on tracks.GenreId=genres.GenreId;

SELECT invoices.InvoiceId, customers.FirstName, customers.LastName 
FROM invoices INNER JOIN customers ON invoices.CustomerId=customers.CustomerId ORDER BY InvoiceId;

SELECT TrackId, name, AlbumId, GenreId, MediaTypeId FROM tracks;

SELECT tracks.TrackId, tracks.Name, albums.Title, genres.Name, media_types.Name FROM tracks
INNER JOIN genres ON tracks.GenreId=genres.GenreId
INNER JOIN media_types ON tracks.MediaTypeId=media_types.MediaTypeId
JOIN albums ON tracks.AlbumId=albums.AlbumId;

SELECT artists.Name, albums.Title FROM artists LEFT JOIN albums On artists.ArtistId=albums.ArtistId; 
SELECT artists.Name, albums.Title FROM albums LEFT JOIN artists On artists.ArtistId=albums.ArtistId;

SELECT artists.Name, albums.Title FROM artists JOIN albums On artists.ArtistId=albums.ArtistId;

SELECT invoices.InvoiceId as id, customers.FirstName as adı, customers.LastName,  invoices.total 
FROM invoices LEFT JOIN customers ON invoices.CustomerId=customers.CustomerId;
























</sql><current_tab id="0"/></tab_sql></sqlb_project>
