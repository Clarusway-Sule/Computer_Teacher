<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/sagla/OneDrive/Masaüstü/Computer Teacher/SQL/SQLite/employees.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="browser structure pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="1475"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainizinler"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="carsalesEmployees" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="42"/><column index="2" value="53"/><column index="3" value="66"/><column index="4" value="56"/><column index="5" value="51"/><column index="6" value="77"/><column index="7" value="50"/><column index="8" value="71"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="izinler" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="42"/><column index="2" value="83"/><column index="3" value="75"/><column index="4" value="79"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="tatil_plani" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="55"/><column index="2" value="73"/><column index="3" value="49"/><column index="4" value="67"/><column index="5" value="102"/><column index="6" value="47"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="yeni" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="42"/><column index="2" value="42"/><column index="3" value="57"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="yenitablo" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="42"/><column index="2" value="102"/><column index="3" value="66"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT InvoiceId, BillingCountry, total FROM invoices WHERE total &gt;(SELECT round(avg(total)) FROM invoices);
SELECT InvoiceId, BillingCountry, total FROM invoices WHERE BillingCountry='Germany' and total &gt;(SELECT round(avg(total)) FROM invoices );
--
SELECT * FROM tracks WHERE AlbumId=(SELECT AlbumId FROM albums WHERE Title='Killers');
--
SELECT tracks.TrackId, tracks.Name, albums.AlbumId, artists.Name 
FROM albums 
INNER JOIN tracks on tracks.AlbumId=albums.AlbumId
INNER JOIN artists on albums.ArtistId=artists.ArtistId 
WHERE albums.Title='Killers';
--
SELECT * FROM albums WHERE AlbumId IN (SELECT AlbumId FROM tracks WHERE Composer='AC/DC');
--coklu sutun dondurmek icin
SELECT * FROM albums WHERE AlbumId IN(SELECT AlbumId FROM tracks WHERE Composer IN('AC/DC','Jerry Cantrell','Audioslave/Chris Cornell'));
--join ile 
SELECT albums.AlbumId, albums.Title, albums.ArtistId, tracks.Composer FROM albums
INNER JOIN tracks on tracks.AlbumId=albums.AlbumId 

WHERE tracks.Composer IN('AC/DC','Jerry Cantrell','Audioslave/Chris Cornell');

--Tüm artistler albüm çıkartmış mı bakalım
SELECT artists.Name as artis_ismi, a.Title as album_ismi FROM artists 
LEFT JOIN albums as a on artists.ArtistId=a.ArtistId WHERE album_ismi IS NULL;
--null olanları saydıralım
SELECT count(*) null_olan FROM artists 
LEFT JOIN albums as a on artists.ArtistId=a.ArtistId WHERE a.Title IS NULL;
SELECT count(artists.Name)-count(albums.Title)FROM artists LEFT JOIN albums on artists.ArtistId=albums.ArtistId;
--
SELECT artists.Name as artis_ismi, a.Title as album_ismi FROM artists 
INNER JOIN albums as a on artists.ArtistId=a.ArtistId GROUP BY artists.Name;
--album ismi tek oldugu icin gruplama yapmadi
SELECT artists.Name as artis_ismi, a.Title as album_ismi FROM artists 
INNER JOIN albums as a on artists.ArtistId=a.ArtistId GROUP BY a.Title;
--her sanatcının kac albumu var
SELECT artists.Name as artis_ismi, count(albums.Title) FROM artists 
INNER JOIN albums as albums on artists.ArtistId=albums.ArtistId GROUP BY artists.Name;

SELECT artists.Name as artis_ismi, count(albums.Title) FROM artists 
INNER JOIN albums as albums on artists.ArtistId=albums.ArtistId  GROUP BY artists.Name HAVING count(albums.Title)&gt;5;
--
SELECT Composer, count(Composer) FROM tracks where Composer like ('A%') GROUP BY Composer  HAVING count(Composer)&gt;5;

SELECT InvoiceId, InvoiceDate, BillingCountry FROM invoices WHERE InvoiceDate&gt;'2010-12-25 00:00:00' GROUP BY BillingCountry HAVING InvoiceId&gt;186;

--2011 den sonra fatura toplamı ulkelere gore 50 den büyük olanların tum bilgisini getir
SELECT BillingCountry, sum(total) as toplam, * FROM invoices WHERE InvoiceDate&gt;'2011-01-01 00:00:00' GROUP BY BillingCountry HAVING toplam&gt;50;

CREATE TABLE &quot;yeni&quot;(id INTEGER, isim TEXT, soyisim TEXT);
CREATE TABLE if not EXISTS &quot;yeni&quot;(id INTEGER, isim TEXT, soyisim TEXT);
DROP TABLE yeni;
DROP TABLE yenitablo;

CREATE TABLE &quot;izinler&quot;(id INTEGER, employe_id INTEGER, bas_tarihi date, bitis_tarihi date);
--



SELECT izinler.id, carsalesEmployees.id, carsalesEmployees.name FROM izinler inner JOIN carsalesEmployees on izinler.employe_id=carsalesEmployees.id;
--tatil planı
CREATE TABLE &quot;tatil_plani&quot;(tatil_id INTEGER, calisan_id INTEGER , sehir TEXT, otel_ismi TEXT, tatil_uzunlugu INTEGER, butce INTEGER);
--
INSERT into tatil_plani (tatil_id, calisan_id, sehir, otel_ismi, tatil_uzunlugu, butce) VALUES (1,3, &quot;Antalya&quot;, &quot;IBIS&quot;, 7, 10000);
--
INSERT INTO izinler(id, emp_id, bas_tarihi, bitis_tarihi) VALUES(1, 7, '2011-01-01', '2011-02-02');
INSERT INTO izinler(id, emp_id, bas_tarihi, bitis_tarihi) VALUES(2, 5, '2011-01-05', '2011-02-08');
SELECT * FROM izinler WHERE bas_tarihi = '2011-01-05';
SELECT typeof(bas_tarihi) FROM izinler;






</sql><current_tab id="0"/></tab_sql></sqlb_project>
