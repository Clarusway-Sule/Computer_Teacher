<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/sagla/OneDrive/Masaüstü/Computer Teacher/SQL/SQLite/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="browser structure pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="3862"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,8:maininvoices"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="albums" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="63"/><column index="2" value="300"/><column index="3" value="61"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="invoices" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="85"/><column index="3" value="129"/><column index="4" value="264"/><column index="5" value="132"/><column index="6" value="82"/><column index="7" value="98"/><column index="8" value="118"/><column index="9" value="42"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT Title, ArtistId FROM albums;

SELECT albums.Title, artists.name 
FROM artists 
INNER JOIN albums
ON albums.ArtistId=artists.ArtistId;

SELECT tracks.Name, genres.Name FROM tracks INNER JOIN genres on genres.GenreId=tracks.GenreId;

SELECT invoices.InvoiceId, customers.FirstName FROM invoices 
INNER JOIN customers ON invoices.CustomerId=customers.CustomerId;

SELECT name, AlbumId, MediaTypeId, GenreId FROM tracks;

SELECT tracks.name as parca_ismi, Composer, albums.Title as album_ismi, media_types.Name as media_turu, genres.Name as muzik_turu 
FROM tracks
INNER JOIN albums on tracks.AlbumId=albums.AlbumId
INNER JOIN media_types on media_types.MediaTypeId=tracks.MediaTypeId
INNER JOIN genres on genres.GenreId=tracks.GenreId;

SELECT artists.Name, albums.Title FROM artists INNER JOIN albums on albums.ArtistId=artists.ArtistId;

SELECT artists.Name, albums.Title FROM artists LEFT JOIN albums on albums.ArtistId=artists.ArtistId;
SELECT artists.Name, albums.Title FROM albums LEFT JOIN artists on albums.ArtistId=artists.ArtistId;

SELECT tracks.Name, genres.Name FROM tracks JOIN genres on genres.GenreId=tracks.GenreId; 

SELECT tracks.Name, genres.Name FROM tracks LEFT JOIN genres on genres.GenreId=tracks.GenreId;
SELECT tracks.Name, genres.Name FROM genres LEFT JOIN tracks on genres.GenreId=tracks.GenreId;

SELECT name, surname, salary FROM carsalesEmployees WHERE name=&quot;Rubie&quot;;

SELECT name, surname, salary FROM carsalesEmployees 
WHERE salary&gt;(SELECT salary FROM carsalesEmployees WHERE name=&quot;Rubie&quot;);

SELECT name, surname, salary FROM carsalesEmployees 
WHERE salary&gt;(SELECT salary FROM carsalesEmployees WHERE name=&quot;Rubie&quot;) ORDER BY salary LIMIT 1;

SELECT TrackId, name, AlbumId FROM tracks WHERE AlbumId=(SELECT AlbumId FROM albums WHERE Title=&quot;Faceless&quot;);

SELECT tracks.TrackId, tracks.Name, tracks.AlbumId 
FROM tracks INNER JOIN albums ON albums.AlbumId=tracks.AlbumId WHERE albums.Title=&quot;Faceless&quot;;


SELECT TrackId, name, AlbumId FROM tracks 
WHERE AlbumId in(SELECT AlbumId FROM albums WHERE Title=&quot;Faceless&quot; or Title=&quot;Let There Be Rock&quot;);

--album ismi A ile başlayan parça isimleri
SELECT name as parca_isimleri, AlbumId FROM tracks WHERE AlbumId in(SELECT AlbumId FROM albums WHERE Title like &quot;A%&quot;);

--hangi artist hangi albumu cıkarttı  (JOİN ile)
SELECT artists.Name, albums.Title FROM artists INNER JOIN albums ON albums.ArtistId=artists.ArtistId;

SELECT artists.Name, albums.Title FROM artists LEFT JOIN albums ON albums.ArtistId=artists.ArtistId 
WHERE albums.Title is NULL;

--bir artistin kaç albumu var

SELECT albums.Name as artist_ismi, count(albums.Title) as album_sayisi
FROM artists  
INNER JOIN albums ON albums.ArtistId=artists.ArtistId WHERE (SELECT count(ArtistId) FROM albums);

SELECT count(ArtistId) FROM albums;

SELECT InvoiceDate, sum(total) as top, BillingCountry FROM invoices 
WHERE InvoiceDate&gt;&quot;2011-01-01&quot;  GROUP BY BillingCountry HAVING top&gt;50;

SELECT artists.ArtistId, artists.Name, albums.Title, count(albums.Title) AS TOP, albums.ArtistId 
FROM artists JOIN albums ON artists.ArtistId=albums.ArtistId
GROUP BY artists.Name HAVING TOP &gt; 10;

SELECT artists.Name as artists_name, count(albums.Title)
from artists
inner join albums on artists.ArtistId = albums.ArtistId group by artists.name HAVING count(albums.Title)&gt;=10;

SELECT artists.name as atrist_ismi, count(albums.Title) FROM artists
INNER JOIN albums ON albums.ArtistId=artists.ArtistId WHERE albums.title&gt;5 GROUP BY artists.Name;



</sql><current_tab id="0"/></tab_sql></sqlb_project>
